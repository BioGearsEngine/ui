#include "version.h"
#include <biogears/version.h>

#include <biogears/string/manipulation.h>

#include <QtCore>
#include <ctime>
#include <locale>

constexpr const char* _OS_ =
#ifdef _WIN32
  "Windows"
#elif defined __unix__
  "Linux"
#elif defined __APPLE__
  "MacOS"
#endif
  ;

#if defined(_MSVC_LANG)
constexpr const char* _COMPILER_NAME_ = "MSVC";
constexpr const char* _COMPILER_VERSION_ =
#if _MSC_VER == 1200
    "6.0"
#  elif _MSC_VER == 1300
    "7.0"
#  elif _MSC_VER == 1310
    "7.1"
#  elif _MSC_VER == 1400
    "8.0"
#  elif _MSC_VER == 1500
    "9.0"
#  elif _MSC_VER == 1600
    "10.0"
#  elif _MSC_VER == 1700
    "11.0"
#  elif _MSC_VER == 1800
    "12.0"
#  elif _MSC_VER == 1900
    "14.0"
#  elif _MSC_VER <= 1920
    "15.X"
#  elif _MSC_VER <= 1930
    "16.X"
#  else 
    "Unknown"
#  endif
;
#elif defined(__clang__)
constexpr const char* _COMPILER_NAME_ = "Clang";
#elif defined(__GNUG__)
constexpr const char* _COMPILER_NAME_ = "GCC";
constexpr const char* _COMPILER_VERSION_ = "\""+"__GNUC__.__GNUC_MINOR__";
#elif defined(__MINGW32__) || defined(__MINGW64__)
constexpr const char* _COMPILER_NAME_ = "MiniGW";
constexpr const char* _COMPILER_VERSION_ = "";
#endif

namespace bio {


//-----------------------------------------------------------------------------

constexpr char const * _PROJECT_NAME_ = "${ROOT_PROJECT_NAME}";
constexpr char const * _REV_HASH_ = "${${ROOT_PROJECT_NAME}_VERSION_HASH}";
constexpr char const * _REV_TAG_ = "${${ROOT_PROJECT_NAME}_VERSION_TAG}";
constexpr char const * _REV_COMMIT_DATE_= "${${ROOT_PROJECT_NAME}_COMMIT_DATE}";
constexpr bool _OFFICAL_RELEASE_ = ${${ROOT_PROJECT_NAME}_DIRTY_BUILD};

constexpr int _MAJOR_VERSION_NUMBER_  = ${${ROOT_PROJECT_NAME}_VERSION_MAJOR};
constexpr int _MINOR_VERSION_NUMBER_  = ${${ROOT_PROJECT_NAME}_VERSION_MINOR};
constexpr int _PATCH_VERSION_NUMBER_  = ${${ROOT_PROJECT_NAME}_VERSION_PATCH};
constexpr int _TWEAK_VERSION_NUMBER_  = ${${ROOT_PROJECT_NAME}_VERSION_TWEAK};


using namespace std::string_literals;
//-----------------------------------------------------------------------------
QString SystemInformation::about()
{
  std::locale::global(std::locale());
  std::time_t t = std::time(nullptr);
  char mbstr[10];
  std::strftime(mbstr, sizeof(mbstr), "%Y", std::localtime(&t));


  return QString("<b>BioGears %1</b><br>"
                 "\nBased on Qt %2   %3 %4<br>"
                 "\nlibBioGears %5 - %9<br>"
                 "\nBuilt on %6<br>"
                 "\nFrom revision %7<br>"
                 "\nCopyright 2012-%8 Applied Research Associates<br>"
                 "\n<br>"
                 "\nThis program is provided AS IS with NO WARRENTY OF ANY KIND<br>"
                 "\nINCLUDING THE WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS<br>"
                 "\nFOR A PARTICULAR PURPOSE<br>")
    .arg(_PROJECT_NAME_)
    .arg(QT_VERSION)
    .arg(_COMPILER_NAME_)
    .arg(_COMPILER_VERSION_)
    .arg(biogears::version_string().c_str())
    .arg(__DATE__)
    .arg(_REV_HASH_)
    .arg(mbstr)
    .arg(biogears::rev_hash().c_str());

  
}
}
